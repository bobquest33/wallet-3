// Code generated by protoc-gen-go.
// source: wallet.proto
// DO NOT EDIT!

/*
Package wallet is a generated protocol buffer package.

It is generated from these files:
	wallet.proto

It has these top-level messages:
	Total
	Operation
*/
package wallet

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Total struct {
	Value int64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *Total) Reset()                    { *m = Total{} }
func (m *Total) String() string            { return proto.CompactTextString(m) }
func (*Total) ProtoMessage()               {}
func (*Total) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Operation struct {
	Value int64  `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Note  string `protobuf:"bytes,2,opt,name=note" json:"note,omitempty"`
}

func (m *Operation) Reset()                    { *m = Operation{} }
func (m *Operation) String() string            { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()               {}
func (*Operation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Total)(nil), "wallet.Total")
	proto.RegisterType((*Operation)(nil), "wallet.Operation")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Wallet service

type WalletClient interface {
	GetTotal(ctx context.Context, in *Total, opts ...grpc.CallOption) (*Total, error)
	AddOperation(ctx context.Context, in *Operation, opts ...grpc.CallOption) (*Total, error)
}

type walletClient struct {
	cc *grpc.ClientConn
}

func NewWalletClient(cc *grpc.ClientConn) WalletClient {
	return &walletClient{cc}
}

func (c *walletClient) GetTotal(ctx context.Context, in *Total, opts ...grpc.CallOption) (*Total, error) {
	out := new(Total)
	err := grpc.Invoke(ctx, "/wallet.Wallet/GetTotal", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) AddOperation(ctx context.Context, in *Operation, opts ...grpc.CallOption) (*Total, error) {
	out := new(Total)
	err := grpc.Invoke(ctx, "/wallet.Wallet/AddOperation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Wallet service

type WalletServer interface {
	GetTotal(context.Context, *Total) (*Total, error)
	AddOperation(context.Context, *Operation) (*Total, error)
}

func RegisterWalletServer(s *grpc.Server, srv WalletServer) {
	s.RegisterService(&_Wallet_serviceDesc, srv)
}

func _Wallet_GetTotal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Total)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).GetTotal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet.Wallet/GetTotal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).GetTotal(ctx, req.(*Total))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_AddOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Operation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).AddOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wallet.Wallet/AddOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).AddOperation(ctx, req.(*Operation))
	}
	return interceptor(ctx, in, info, handler)
}

var _Wallet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wallet.Wallet",
	HandlerType: (*WalletServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTotal",
			Handler:    _Wallet_GetTotal_Handler,
		},
		{
			MethodName: "AddOperation",
			Handler:    _Wallet_AddOperation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("wallet.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 148 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4f, 0xcc, 0xc9,
	0x49, 0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0x64, 0xb9, 0x58,
	0x43, 0xf2, 0x4b, 0x12, 0x73, 0x84, 0x44, 0xb8, 0x58, 0xcb, 0x12, 0x73, 0x4a, 0x53, 0x25, 0x18,
	0x15, 0x18, 0x35, 0x98, 0x83, 0x20, 0x1c, 0x25, 0x53, 0x2e, 0x4e, 0xff, 0x82, 0xd4, 0xa2, 0xc4,
	0x92, 0xcc, 0xfc, 0x3c, 0xec, 0x4a, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0xf2, 0x4b, 0x52, 0x25, 0x98,
	0x80, 0x82, 0x9c, 0x41, 0x60, 0xb6, 0x51, 0x06, 0x17, 0x5b, 0x38, 0xd8, 0x7c, 0x21, 0x2d, 0x2e,
	0x0e, 0xf7, 0xd4, 0x12, 0x88, 0x15, 0xbc, 0x7a, 0x50, 0x27, 0x80, 0xb9, 0x52, 0xa8, 0x5c, 0x25,
	0x06, 0x21, 0x23, 0x2e, 0x1e, 0xc7, 0x94, 0x14, 0x84, 0x7d, 0x82, 0x30, 0x05, 0x70, 0x21, 0x0c,
	0x3d, 0x49, 0x6c, 0x60, 0xef, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x25, 0x90, 0xe2, 0x13,
	0xde, 0x00, 0x00, 0x00,
}
